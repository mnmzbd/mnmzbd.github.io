setwd("/Users/madi_mitchell/Desktop/uav_flood_analysis/RStudio/Data")
###RENUMBER THE .CSV FILE (CORRECT PLOTID, RANGE, AND ROW TO THE NEW PH)###
R5 <- read.csv("Rollins_Field_Map_NEW.csv")
new_ph <- read.csv("re-number.csv")
View(R5)
View(new_ph)
names(R5)[names(R5) == 'MOplot'] <- 'PlotID'
View(new_ph)
#MERGE THE DF SO THAT YOU HAVE COLUMNS AND ROWS
test_means_correct <- merge(new_ph, R5, by = "PlotID")
View(test_means_correct)
#EXPORT AND SAVE THE CSV
write.csv(test_means_correct, file = "Rollins_Field_Map_NEW_240222.csv")
################################################################################
##################################PREP WORK#####################################
################################################################################
library(tidyverse)
library(ggplot2)
library(ggpubr)
library(magrittr)
library(dplyr)
library(rstatix)
library(RColorBrewer)
library(AICcmodavg)
library(multcompView)
library(viridis)
wd <- "/Users/madi_mitchell/Desktop/uav_flood_analysis/RStudio/Data/2020_BradC5b/Corrected_Plots/"
# name of the file that is being graphed
x <- "210721_Rollins5_Indices_Agisoft_nosoil_CLEAN.csv"
# name of the new file at the end
#z <- "210721_Best_PlotID.csv"
# early date for comparison
#m <- "210622_All_Data.csv"
setwd(wd)
setwd("/Users/madi_mitchell/Desktop/uav_flood_analysis/Data/2021_Rollins5_TAMU")
# column and row info from excel
m <- "Rollins_Field_Map_NEW_240222.csv"
#name for the final data csv to be exported to wd
a <- "210622_Rollins5_Indices_Agisoft_nosoil_CLEAN.csv"
# bring in the csv files
DF1 <- read.csv(x)
DF2 <- read.csv(m)
setwd("/Users/madi_mitchell/Desktop/uav_flood_analysis/RStudio/Data")
###RENUMBER THE .CSV FILE (CORRECT PLOTID, RANGE, AND ROW TO THE NEW PH)###
R5 <- read.csv("Rollins_Field_Map_NEW.csv")
new_ph <- read.csv("re-number.csv")
names(R5)[names(R5) == 'MOplot'] <- 'PlotID'
#MERGE THE DF SO THAT YOU HAVE COLUMNS AND ROWS
test_means_correct <- merge(new_ph, R5, by = "PlotID")
names(DF2)[names(DF2) == 'PlotID'] <- 'PlotID_agisoft'
setwd("/Users/madi_mitchell/Desktop/uav_flood_analysis/Data/2021_Rollins5_TAMU")
# bring in the csv files
DF1 <- read.csv(x)
DF2 <- read.csv(m)
# Indices file name
x <- "210721_Rollins5_Indices_Agisoft_nosoil.csv"
# Indices file name
x <- "210622_Rollins5_Indices_Agisoft_nosoil.csv"
# column and row info from excel
m <- "Rollins_Field_Map_NEW_240222.csv"
#name for the final data csv to be exported to wd
a <- "210622_Rollins5_Indices_Agisoft_nosoil_CLEAN.csv"
# bring in the csv files
DF1 <- read.csv(x)
DF2 <- read.csv(m)
View(DF2)
View(DF2)
#merge...you can only do two at a time
Data <- merge(DF1, DF2, by = "PlotID")
# column and row info from excel
m <- "Rollins_Field_Map_NEW_240222.csv"
#name for the final data csv to be exported to wd
a <- "210622_Rollins5_Indices_Agisoft_nosoil_CLEAN.csv"
# Indices file name
x <- "210622_Rollins5_Indices_Agisoft_nosoil.csv"
# bring in the csv files
DF1 <- read.csv(x)
DF2 <- read.csv(m)
names(DF2)[names(DF2) == 'PlotID'] <- 'PlotID_agisoft'
View(DF2)
names(DF2)[names(DF2) == 'new_ID'] <- 'PlotID'
#merge...you can only do two at a time
Data <- merge(DF1, DF2, by = "PlotID")
#select only the wanted columns of data
AllDATA_cleaned <- Data[ , c("PlotID","PlotID_agisoft", "BI","GLI","NGRDI","VARI","BGI","NDVI","Pedigree","Exp_row","Exp_range")]
write.csv(AllDATA_cleaned, file = a)
################################################################################
##################################PREP WORK#####################################
################################################################################
library(tidyverse)
library(ggplot2)
library(ggpubr)
library(magrittr)
library(dplyr)
library(rstatix)
library(RColorBrewer)
library(AICcmodavg)
library(multcompView)
library(viridis)
wd <- "/Users/madi_mitchell/Desktop/uav_flood_analysis/RStudio/Data/2020_BradC5b/Corrected_Plots/"
# name of the file that is being graphed
x <- "210622_Rollins5_Indices_Agisoft_nosoil_CLEAN.csv"
# name of the new file at the end
#z <- "210721_Best_PlotID.csv"
# early date for comparison
#m <- "210622_All_Data.csv"
setwd(wd)
###############################################################################
########################CREATING HEAT MAPS FOR DATE X##########################
###############################################################################
df <- read.csv(x, header = TRUE, sep = ",")
# Graph heatmap of NDVI
ggplot(df, aes(x = Exp_row, y = Exp_range, fill = NDVI)) +
geom_tile(color = "black") +
geom_tile() +
xlab(label = "Row") +
ylab(label = "Range") +
scale_fill_viridis_c(limits=c(-1, 1), breaks=seq(-1,1,by=0.2)) +
guides( fill = guide_colourbar(barwidth = 0.5,
barheight = 20)) +
theme_gray(base_size = 24)+
theme(#axis.title.x = element_blank(),
legend.position = '')
# Indices file name
x <- "210721_Rollins5_Indices_Agisoft_nosoil.csv"
# column and row info from excel
m <- "Rollins_Field_Map_NEW_240222.csv"
#name for the final data csv to be exported to wd
a <- "2106721_Rollins5_Indices_Agisoft_nosoil_CLEAN.csv"
# bring in the csv files
DF1 <- read.csv(x)
DF2 <- read.csv(m)
names(DF2)[names(DF2) == 'PlotID'] <- 'PlotID_agisoft'
names(DF2)[names(DF2) == 'new_ID'] <- 'PlotID'
#merge...you can only do two at a time
Data <- merge(DF1, DF2, by = "PlotID")
#select only the wanted columns of data
AllDATA_cleaned <- Data[ , c("PlotID","PlotID_agisoft", "BI","GLI","NGRDI","VARI","BGI","NDVI","Pedigree","Exp_row","Exp_range")]
write.csv(AllDATA_cleaned, file = a)
# name of the file that is being graphed
x <- "210721_Rollins5_Indices_Agisoft_nosoil_CLEAN.csv"
###############################################################################
########################CREATING HEAT MAPS FOR DATE X##########################
###############################################################################
df <- read.csv(x, header = TRUE, sep = ",")
# Graph heatmap of NDVI
ggplot(df, aes(x = Exp_row, y = Exp_range, fill = NDVI)) +
geom_tile(color = "black") +
geom_tile() +
xlab(label = "Row") +
ylab(label = "Range") +
scale_fill_viridis_c(limits=c(-1, 1), breaks=seq(-1,1,by=0.2)) +
guides( fill = guide_colourbar(barwidth = 0.5,
barheight = 20)) +
theme_gray(base_size = 24)+
theme(#axis.title.x = element_blank(),
legend.position = '')
# Indices file name
x <- "210721_Rollins5_Indices_Agisoft_nosoil.csv"
# column and row info from excel
m <- "Rollins_Field_Map_NEW_240222.csv"
#name for the final data csv to be exported to wd
a <- "2106721_Rollins5_Indices_Agisoft_nosoil_CLEAN.csv"
# bring in the csv files
DF1 <- read.csv(x)
DF2 <- read.csv(m)
View(DF1)
View(DF2)
names(DF2)[names(DF2) == 'PlotID'] <- 'PlotID_agisoft'
names(DF2)[names(DF2) == 'new_ID'] <- 'PlotID'
View(DF2)
#merge...you can only do two at a time
Data <- merge(DF1, DF2, by = "PlotID")
View(Data)
#select only the wanted columns of data
AllDATA_cleaned <- Data[ , c("PlotID","PlotID_agisoft", "BI","GLI","NGRDI","VARI","BGI","NDVI","Pedigree","Exp_row","Exp_range")]
View(AllDATA_cleaned)
write.csv(AllDATA_cleaned, file = a)
View(AllDATA_cleaned)
write.csv(AllDATA_cleaned, file = a)
#name for the final data csv to be exported to wd
a <- "2106721_Rollins5_CLEAN.csv"
write.csv(AllDATA_cleaned, file = a)
# name of the file that is being graphed
x <- "2106721_Rollins5_CLEAN.csv"
###############################################################################
########################CREATING HEAT MAPS FOR DATE X##########################
###############################################################################
df <- read.csv(x, header = TRUE, sep = ",")
View(df)
# Graph heatmap of NDVI
ggplot(df, aes(x = Exp_row, y = Exp_range, fill = NDVI)) +
geom_tile(color = "black") +
geom_tile() +
xlab(label = "Row") +
ylab(label = "Range") +
scale_fill_viridis_c(limits=c(-1, 1), breaks=seq(-1,1,by=0.2)) +
guides( fill = guide_colourbar(barwidth = 0.5,
barheight = 20)) +
theme_gray(base_size = 24)+
theme(#axis.title.x = element_blank(),
legend.position = '')
View(df)
# Indices file name
x <- "210701_Rollins5_Indices_Agisoft_nosoil.csv"
# column and row info from excel
m <- "Rollins_Field_Map_NEW_240222.csv"
#name for the final data csv to be exported to wd
a <- "2106701_Rollins5_CLEAN.csv"
# bring in the csv files
DF1 <- read.csv(x)
DF2 <- read.csv(m)
names(DF2)[names(DF2) == 'PlotID'] <- 'PlotID_agisoft'
names(DF2)[names(DF2) == 'new_ID'] <- 'PlotID'
#merge...you can only do two at a time
Data <- merge(DF1, DF2, by = "PlotID")
View(Data)
#select only the wanted columns of data
AllDATA_cleaned <- Data[ , c("PlotID","PlotID_agisoft", "BI","GLI","NGRDI","VARI","BGI","NDVI","Pedigree","Exp_row","Exp_range")]
write.csv(AllDATA_cleaned, file = a)
# Indices file name
x <- "210622_Rollins5_Indices_Agisoft_nosoil.csv"
# column and row info from excel
m <- "Rollins_Field_Map_NEW_240222.csv"
#name for the final data csv to be exported to wd
a <- "210622_Rollins5_CLEAN.csv"
# bring in the csv files
DF1 <- read.csv(x)
DF2 <- read.csv(m)
names(DF2)[names(DF2) == 'PlotID'] <- 'PlotID_agisoft'
names(DF2)[names(DF2) == 'new_ID'] <- 'PlotID'
#merge...you can only do two at a time
Data <- merge(DF1, DF2, by = "PlotID")
#select only the wanted columns of data
AllDATA_cleaned <- Data[ , c("PlotID","PlotID_agisoft", "BI","GLI","NGRDI","VARI","BGI","NDVI","Pedigree","Exp_row","Exp_range")]
write.csv(AllDATA_cleaned, file = a)
# name of the file that is being graphed
x <- "210622_Rollins5_CLEAN.csv"
###############################################################################
########################CREATING HEAT MAPS FOR DATE X##########################
###############################################################################
df <- read.csv(x, header = TRUE, sep = ",")
# Graph heatmap of NDVI
ggplot(df, aes(x = Exp_row, y = Exp_range, fill = NDVI)) +
geom_tile(color = "black") +
geom_tile() +
xlab(label = "Row") +
ylab(label = "Range") +
scale_fill_viridis_c(limits=c(-1, 1), breaks=seq(-1,1,by=0.2)) +
guides( fill = guide_colourbar(barwidth = 0.5,
barheight = 20)) +
theme_gray(base_size = 24)+
theme(#axis.title.x = element_blank(),
legend.position = '')
# name of the file that is being graphed
x <- "210721_Rollins5_CLEAN.csv"
###############################################################################
########################CREATING HEAT MAPS FOR DATE X##########################
###############################################################################
df <- read.csv(x, header = TRUE, sep = ",")
# Graph heatmap of NDVI
ggplot(df, aes(x = Exp_row, y = Exp_range, fill = NDVI)) +
geom_tile(color = "black") +
geom_tile() +
xlab(label = "Row") +
ylab(label = "Range") +
scale_fill_viridis_c(limits=c(0, 1), breaks=seq(0,1,by=0.1)) +
guides( fill = guide_colourbar(barwidth = 0.5,
barheight = 20)) +
theme_gray(base_size = 24)+
theme(#axis.title.x = element_blank(),
legend.position = '')
# name of the file that is being graphed
x <- "210622_Rollins5_CLEAN.csv"
###############################################################################
########################CREATING HEAT MAPS FOR DATE X##########################
###############################################################################
df <- read.csv(x, header = TRUE, sep = ",")
# Graph heatmap of NDVI
ggplot(df, aes(x = Exp_row, y = Exp_range, fill = NDVI)) +
geom_tile(color = "black") +
geom_tile() +
xlab(label = "Row") +
ylab(label = "Range") +
scale_fill_viridis_c(limits=c(0, 1), breaks=seq(0,1,by=0.1)) +
guides( fill = guide_colourbar(barwidth = 0.5,
barheight = 20)) +
theme_gray(base_size = 24)+
theme(#axis.title.x = element_blank(),
legend.position = '')
# name of the file that is being graphed
x <- "210701_Rollins5_CLEAN.csv"
###############################################################################
########################CREATING HEAT MAPS FOR DATE X##########################
###############################################################################
df <- read.csv(x, header = TRUE, sep = ",")
# Graph heatmap of NDVI
ggplot(df, aes(x = Exp_row, y = Exp_range, fill = NDVI)) +
geom_tile(color = "black") +
geom_tile() +
xlab(label = "Row") +
ylab(label = "Range") +
scale_fill_viridis_c(limits=c(0, 1), breaks=seq(0,1,by=0.1)) +
guides( fill = guide_colourbar(barwidth = 0.5,
barheight = 20)) +
theme_gray(base_size = 24)+
theme(#axis.title.x = element_blank(),
legend.position = '')
###############################################################################
########################CREATING HEAT MAPS FOR DATE X##########################
###############################################################################
df <- read.csv(x, header = TRUE, sep = ",")
# Graph heatmap of NDVI
ggplot(df, aes(x = Exp_row, y = Exp_range, fill = NDVI)) +
geom_tile(color = "black") +
geom_tile() +
xlab(label = "Row") +
ylab(label = "Range") +
scale_fill_viridis_c(limits=c(0, 1), breaks=seq(0,1,by=0.1)) +
guides( fill = guide_colourbar(barwidth = 0.5,
barheight = 20)) +
theme_gray(base_size = 24)+
theme(#axis.title.x = element_blank(),
legend.position = '')
# Graph heatmap of NDVI
ggplot(df, aes(x = Exp_row, y = Exp_range, fill = NDVI)) +
geom_tile(color = "black") +
geom_tile() +
xlab(label = "Row") +
ylab(label = "Range") +
scale_fill_viridis_c(limits=c(-1, 1), breaks=seq(-1,1,by=0.2)) +
guides( fill = guide_colourbar(barwidth = 0.5,
barheight = 20)) +
theme_gray(base_size = 24)+
theme(#axis.title.x = element_blank(),
legend.position = '')
setwd("/Users/madi_mitchell/Desktop/uav_flood_analysis/Data/2020_BradC5b/Corrected_Plots")
# name of the file that is being graphed
x <- "200629_Indices_corrected_plots.csv"
###############################################################################
########################CREATING HEAT MAPS FOR DATE X##########################
###############################################################################
df <- read.csv(x, header = TRUE, sep = ",")
View(df)
# Graph heatmap of NDVI
ggplot(df, aes(x = GQIS_rows, y = QGIS_range, fill = NDVI)) +
geom_tile(color = "black") +
geom_tile() +
xlab(label = "Row") +
ylab(label = "Range") +
scale_fill_viridis_c(limits=c(0, 1), breaks=seq(0,1,by=0.1)) +
guides( fill = guide_colourbar(barwidth = 0.5,
barheight = 20)) +
theme_gray(base_size = 24)+
theme(#axis.title.x = element_blank(),
legend.position = '')
# Graph heatmap of NDVI
ggplot(df, aes(x = QGIS_rows, y = QGIS_range, fill = NDVI)) +
geom_tile(color = "black") +
geom_tile() +
xlab(label = "Row") +
ylab(label = "Range") +
scale_fill_viridis_c(limits=c(0, 1), breaks=seq(0,1,by=0.1)) +
guides( fill = guide_colourbar(barwidth = 0.5,
barheight = 20)) +
theme_gray(base_size = 24)+
theme(#axis.title.x = element_blank(),
legend.position = '')
# name of the file that is being graphed
x <- "200709_Indices_corrected_plots.csv"
###############################################################################
########################CREATING HEAT MAPS FOR DATE X##########################
###############################################################################
df <- read.csv(x, header = TRUE, sep = ",")
# Graph heatmap of NDVI
ggplot(df, aes(x = QGIS_rows, y = QGIS_range, fill = NDVI)) +
geom_tile(color = "black") +
geom_tile() +
xlab(label = "Row") +
ylab(label = "Range") +
scale_fill_viridis_c(limits=c(0, 1), breaks=seq(0,1,by=0.1)) +
guides( fill = guide_colourbar(barwidth = 0.5,
barheight = 20)) +
theme_gray(base_size = 24)+
theme(#axis.title.x = element_blank(),
legend.position = '')
# import the first All_Data csv file
df <- na.omit(read.csv(x, header = TRUE, sep = ","))
# Graph heatmap of NDVI
ggplot(df, aes(x = QGIS_rows, y = QGIS_range, fill = NDVI)) +
geom_tile(color = "black") +
geom_tile() +
xlab(label = "Row") +
ylab(label = "Range") +
scale_fill_viridis_c(limits=c(0, 1), breaks=seq(0,1,by=0.1)) +
guides( fill = guide_colourbar(barwidth = 0.5,
barheight = 20)) +
theme_gray(base_size = 24)+
theme(#axis.title.x = element_blank(),
legend.position = '')
#fix N/A
df[is.na(df)] <- 0.6
###############################################################################
########################CREATING HEAT MAPS FOR DATE X##########################
###############################################################################
df <- read.csv(x, header = TRUE, sep = ",")
#fix N/A
df[is.na(df)] <- 0.6
# Graph heatmap of NDVI
ggplot(df, aes(x = QGIS_rows, y = QGIS_range, fill = NDVI)) +
geom_tile(color = "black") +
geom_tile() +
xlab(label = "Row") +
ylab(label = "Range") +
scale_fill_viridis_c(limits=c(0, 1), breaks=seq(0,1,by=0.1)) +
guides( fill = guide_colourbar(barwidth = 0.5,
barheight = 20)) +
theme_gray(base_size = 24)+
theme(#axis.title.x = element_blank(),
legend.position = '')
avg(NDVI)
avg(df$NDVI)
mean(df$NDVI)
#fix N/A
df[is.na(df)] <- 0.7684683
# Graph heatmap of NDVI
ggplot(df, aes(x = QGIS_rows, y = QGIS_range, fill = NDVI)) +
geom_tile(color = "black") +
geom_tile() +
xlab(label = "Row") +
ylab(label = "Range") +
scale_fill_viridis_c(limits=c(0, 1), breaks=seq(0,1,by=0.1)) +
guides( fill = guide_colourbar(barwidth = 0.5,
barheight = 20)) +
theme_gray(base_size = 24)+
theme(#axis.title.x = element_blank(),
legend.position = '')
# name of the file that is being graphed
x <- "200728_Indices_corrected_plots.csv"
###############################################################################
########################CREATING HEAT MAPS FOR DATE X##########################
###############################################################################
df <- read.csv(x, header = TRUE, sep = ",")
mean(df$NDVI)
#fix N/A
df[is.na(df)] <- 0.8619416
# Graph heatmap of NDVI
ggplot(df, aes(x = QGIS_rows, y = QGIS_range, fill = NDVI)) +
geom_tile(color = "black") +
geom_tile() +
xlab(label = "Row") +
ylab(label = "Range") +
scale_fill_viridis_c(limits=c(0, 1), breaks=seq(0,1,by=0.1)) +
guides( fill = guide_colourbar(barwidth = 0.5,
barheight = 20)) +
theme_gray(base_size = 24)+
theme(#axis.title.x = element_blank(),
legend.position = '')
# name of the file that is being graphed
x <- "200728_Indices_corrected_plots.csv"
###############################################################################
########################CREATING HEAT MAPS FOR DATE X##########################
###############################################################################
df <- read.csv(x, header = TRUE, sep = ",")
#fix N/A
df[is.na(df)] <- 0.8619416
# Graph heatmap of NDVI
ggplot(df, aes(x = QGIS_rows, y = QGIS_range, fill = NDVI)) +
geom_tile(color = "black") +
geom_tile() +
xlab(label = "Row") +
ylab(label = "Range") +
scale_fill_viridis_c(limits=c(0, 1), breaks=seq(0,1,by=0.1)) +
guides( fill = guide_colourbar(barwidth = 0.5,
barheight = 20)) +
theme_gray(base_size = 24)+
theme(#axis.title.x = element_blank(),
legend.position = '')
